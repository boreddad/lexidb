#!/usr/bin/env python3

import socket

class ProtocolBuilder:
    def __init__(self):
        self.__buf = b""

    def add_simple(self, string):
        self.__buf += b"+"
        self.__buf += string.encode()
        self.__add_end()
        return self

    def add_bulk(self, string):
        string_len = len(string)
        self.__buf += b"$"
        self.__add_len(string_len)
        self.__add_end()
        self.__buf += string.encode()
        self.__add_end()
        return self

    def add_array(self, length):
        self.__buf += b"*"
        self.__add_len(length)
        self.__add_end()
        return self

    def get(self):
        return self.__buf

    def __add_len(self, length):
        self.__buf += str(length).encode()

    def __add_end(self):
        self.__buf += b"\r\n"

class Client:
    def __init__(self, addr, port):
        self.__addr = addr
        self.__port = port

    def connect(self):
        self.__socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        self.__socket.connect((self.__addr, self.__port))

    def close(self):
        self.__socket.close()

    def ping(self):
        self.__send(ProtocolBuilder().add_simple("PING").get())
        print(self.__socket.recv(4096).decode())

    def set(self, k, v):
        self.__send(ProtocolBuilder().add_array(3).add_simple("SET").add_bulk(k).add_bulk(v).get())
        print(self.__socket.recv(4096).decode())

    def get(self, k):
        self.__send(ProtocolBuilder().add_array(2).add_simple("GET").add_bulk(k).get())
        print(self.__socket.recv(4096).decode())

    def keys(self):
        self.__send(ProtocolBuilder().add_simple("KEYS").get())
        print(self.__socket.recv(4096).decode())

    def __send(self, buf):
        self.__socket.send(buf)

client = Client("127.0.0.1", 5173)

client.connect()

client.ping()

client.set("foo", "bar")

client.set("bar", "foo")

client.set("baz", "foo")

client.keys()

client.get("foo")

client.close()
